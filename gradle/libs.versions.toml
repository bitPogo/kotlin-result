[versions]
dokka = "1.7.10"
kotlin = "1.7.10"
kotlinBenchmark = "0.4.7"
kotlinCoroutines = "1.6.4"
ktor = "2.1.3"
logback = "1.4.5"
versionsPlugin = "0.45.0"

[libraries]
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-benchmark-runtime = { module = "org.jetbrains.kotlinx:kotlinx-benchmark-runtime", version.ref = "kotlinBenchmark" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinCoroutines" }
kotlin-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinCoroutines" }

ktor-server-core = { module = "io.ktor:ktor-server-core", version.ref = "ktor" }
ktor-serialization-jackson = { module = "io.ktor:ktor-serialization-jackson", version.ref = "ktor" }
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation", version.ref = "ktor" }
ktor-server-netty = { module = "io.ktor:ktor-server-netty", version.ref = "ktor" }


[plugins]
versions = { id = "com.github.ben-manes.versions", version.ref = "versionsPlugin" }
multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
benchmark = { id = "org.jetbrains.kotlinx.benchmark", version.ref = "kotlinBenchmark" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
allOpen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
